{"ast":null,"code":"import _asyncToGenerator from \"/home/meghna/mogi/kube-mogi/cheeta/frontend/cheeta/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nconst CHEETA_USERS_URL = environment.cheetaUserURL;\nexport class CheetaUsersService {\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n  }\n\n  updateUser(userProfile) {\n    return new Promise((resolve, reject) => {\n      this.http.put(CHEETA_USERS_URL + localStorage.getItem('userId'), userProfile).subscribe( /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator(function* (res) {\n          resolve(res);\n        });\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }(), err => {\n        reject(err);\n      });\n    });\n  }\n\n  getUserData(userId = localStorage.getItem('userId')) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      return new Promise((resolve, reject) => {\n        _this.http.get(CHEETA_USERS_URL + userId).subscribe( /*#__PURE__*/function () {\n          var _ref2 = _asyncToGenerator(function* (res) {\n            resolve(res);\n          });\n\n          return function (_x2) {\n            return _ref2.apply(this, arguments);\n          };\n        }(), err => {\n          reject(err);\n        });\n      });\n    })();\n  } //function used for getting members list from backend to import members of organization with valid emails\n\n\n  getUsersList() {\n    return new Promise((resolve, reject) => {\n      this.http.get(CHEETA_USERS_URL + \"getUsersList\").subscribe(res => {\n        resolve(res.data);\n      }, err => {\n        reject(err);\n      });\n    });\n  }\n\n  getScore() {\n    return new Promise((resolve, reject) => {\n      this.http.get(CHEETA_USERS_URL + \"getScores\").subscribe(res => {\n        // console.log(res)\n        resolve(res.data);\n      }, err => {\n        reject(err);\n      });\n    });\n  }\n\n}\n\nCheetaUsersService.ɵfac = function CheetaUsersService_Factory(t) {\n  return new (t || CheetaUsersService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n};\n\nCheetaUsersService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CheetaUsersService,\n  factory: CheetaUsersService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["/home/meghna/mogi/kube-mogi/cheeta/frontend/cheeta/src/app/service/cheetaUsers.service.ts"],"names":["environment","i0","i1","i2","CHEETA_USERS_URL","cheetaUserURL","CheetaUsersService","constructor","http","router","updateUser","userProfile","Promise","resolve","reject","put","localStorage","getItem","subscribe","res","err","getUserData","userId","get","getUsersList","data","getScore","ɵfac","CheetaUsersService_Factory","t","ɵɵinject","HttpClient","Router","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":"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","sourcesContent":["import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nconst CHEETA_USERS_URL = environment.cheetaUserURL;\nexport class CheetaUsersService {\n    constructor(http, router) {\n        this.http = http;\n        this.router = router;\n    }\n    updateUser(userProfile) {\n        return new Promise((resolve, reject) => {\n            this.http.put(CHEETA_USERS_URL + localStorage.getItem('userId'), userProfile).subscribe(async (res) => {\n                resolve(res);\n            }, (err) => {\n                reject(err);\n            });\n        });\n    }\n    async getUserData(userId = localStorage.getItem('userId')) {\n        return new Promise((resolve, reject) => {\n            this.http.get(CHEETA_USERS_URL + userId)\n                .subscribe(async (res) => {\n                resolve(res);\n            }, (err) => {\n                reject(err);\n            });\n        });\n    }\n    //function used for getting members list from backend to import members of organization with valid emails\n    getUsersList() {\n        return new Promise((resolve, reject) => {\n            this.http.get(CHEETA_USERS_URL + \"getUsersList\")\n                .subscribe((res) => {\n                resolve(res.data);\n            }, (err) => {\n                reject(err);\n            });\n        });\n    }\n    getScore() {\n        return new Promise((resolve, reject) => {\n            this.http.get(CHEETA_USERS_URL + \"getScores\")\n                .subscribe((res) => {\n                // console.log(res)\n                resolve(res.data);\n            }, (err) => {\n                reject(err);\n            });\n        });\n    }\n}\nCheetaUsersService.ɵfac = function CheetaUsersService_Factory(t) { return new (t || CheetaUsersService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router)); };\nCheetaUsersService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: CheetaUsersService, factory: CheetaUsersService.ɵfac, providedIn: 'root' });\n"]},"metadata":{},"sourceType":"module"}