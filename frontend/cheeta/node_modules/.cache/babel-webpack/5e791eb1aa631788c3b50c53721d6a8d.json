{"ast":null,"code":"import _asyncToGenerator from \"/home/meghna/mogi/kube-mogi/cheeta/frontend/cheeta/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate, __param } from \"tslib\";\nimport { Component, Inject, ViewChild } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { CreateValidation } from '../validations/validation-instance';\nlet CreateTicketComponent = class CreateTicketComponent {\n  constructor(dialogRef, cheetaTicketService, cheetaUserService, fileUploader, dialog, notification, data) {\n    this.dialogRef = dialogRef;\n    this.cheetaTicketService = cheetaTicketService;\n    this.cheetaUserService = cheetaUserService;\n    this.fileUploader = fileUploader;\n    this.dialog = dialog;\n    this.notification = notification;\n    this.data = data; //ngModel names used for form\n\n    this.createTicket = {\n      title: '',\n      description: '',\n      priority: '',\n      files: [],\n      tags: [],\n      members: [],\n      comments: [],\n      type: '',\n      expectedTime: '',\n      UT: 'false',\n      documentation: 'false'\n    }; //for validation\n\n    this.titleValidation = new CreateValidation();\n    this.descriptionValidation = new CreateValidation();\n    this.priorityValidation = new CreateValidation();\n    this.membersArr = [];\n    this.addOn = false;\n    this.advanceOn = false;\n    this.labelPosition = \"before\";\n    this.edit = false;\n    this.btnString = \"Create\";\n    this.isClicked = false;\n    this.isLoading = false;\n    this.min = new Date();\n  }\n\n  ngOnInit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.isLoading = true;\n      let res = yield _this.cheetaUserService.getUsersList();\n      if (res && res.length) _this.membersArr = res;\n      _this.isLoading = false;\n\n      if (_this.data.edit) {\n        _this.isLoading = true;\n        _this.createTicket = Object.assign({}, _this.data.ticketInfo);\n        if (_this.data.ticketInfo.tags) _this.createTicket.tags = _this.data.ticketInfo.tags.join(', ');\n        if (_this.data.ticketInfo.UT) _this.createTicket.UT = 'true';else _this.createTicket.UT = 'false';\n        if (_this.data.ticketInfo.documentation) _this.createTicket.documentation = 'true';else _this.createTicket.documentation = 'false';\n        _this.btnString = 'Edit';\n        _this.isLoading = false;\n      }\n    })();\n  }\n\n  onCreate() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      const ticket = {\n        title: _this2.createTicket.title,\n        description: _this2.createTicket.description,\n        priority: _this2.createTicket.priority,\n        type: _this2.createTicket.type\n      }; // if(this.createTicket.type) ticket['type'] = this.createTicket.type;\n\n      if (_this2.createTicket.UT == 'true') ticket['UT'] = true;else ticket['UT'] = false;\n      if (_this2.createTicket.documentation == 'true') ticket['documentation'] = true;else ticket['documentation'] = false;\n      if (_this2.createTicket.expectedTime) ticket['expectedTime'] = _this2.createTicket.expectedTime;\n\n      if (_this2.createTicket.members) {\n        ticket['members'] = [..._this2.createTicket.members];\n      }\n\n      if (_this2.createTicket.comments) ticket['comments'] = [..._this2.createTicket.comments];\n      if (_this2.createTicket.files) ticket['files'] = [..._this2.createTicket.files];\n      if (_this2.createTicket.tags) ticket['tags'] = _this2.createTicket.tags.replace(/\\s+/g, '').split(',');\n\n      if (ticket.title && ticket.description && ticket.priority && ticket.type) {\n        let res;\n        _this2.isClicked = true;\n\n        if (!_this2.data.edit) {\n          res = yield _this2.cheetaTicketService.addTicket(ticket);\n\n          _this2.dialogRef.close();\n        } else {\n          res = yield _this2.cheetaTicketService.updateTicket(_this2.data.ticketInfo._id, ticket);\n\n          _this2.dialogRef.close();\n        } // Add a toaster for Success msg and failure msgs accordingly\n        // in place of alerts!!!!!!!!\n\n\n        if (res) {\n          _this2.notification.openDialog(_this2.btnString + ' Successfully');\n\n          _this2.dialogRef.close();\n        }\n      } else {\n        _this2.notification.openWarningDialog('Invalid Details!');\n\n        return;\n      }\n    })();\n  }\n\n  addMember(ele) {\n    let element = ele.target;\n    let flag = 0;\n    this.createTicket.members.forEach(e => {\n      if (e.userId == element.value) flag++;\n    });\n    if (flag) return;\n    this.membersArr.forEach(e => {\n      if (e._id == element.value) this.createTicket.members.push({\n        email: e.email,\n        userId: e._id,\n        type: e.type,\n        profilePic: e.profilePic\n      });\n    });\n  }\n\n  remove(member) {\n    const index = this.createTicket.members.indexOf(member);\n\n    if (index >= 0) {\n      this.createTicket.members.splice(index, 1);\n    }\n  }\n\n  removeFiles(files) {\n    const index = this.createTicket.files.indexOf(files);\n\n    if (index >= 0) {\n      this.createTicket.files.splice(index, 1);\n    } // this.file.nativeElement.value = \"\";\n\n  }\n\n  onValidation() {\n    this.titleValidation.errorMessage = \"This field is required\";\n    this.descriptionValidation.errorMessage = \"This field is required\";\n    this.priorityValidation.errorMessage = \"this field is required\";\n  }\n\n  addComment(comment) {\n    let commentObj = {\n      user: localStorage.getItem('email'),\n      msg: comment.value,\n      dateTime: new Date().toISOString()\n    };\n    this.createTicket.comments.push(commentObj);\n  }\n\n  selectedFile(e) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      let ele = e.target;\n      const FILE = ele.files[0];\n      const fileUrl = yield _this3.fileUploader.uploadFile('cheetaFiles', FILE);\n\n      _this3.createTicket.files.push(fileUrl);\n\n      _this3.file.nativeElement.value = \"\";\n    })();\n  }\n\n  addTags(event) {\n    const value = (event.value || '').trim();\n    this.createTicket.tags.push(this.tags);\n  }\n\n  removeTags(event) {\n    const index = this.createTicket.tags.indexOf(event);\n\n    if (index >= 0) {\n      this.createTicket.tags.splice(index, 1);\n    }\n  }\n\n  goToLink(url) {\n    window.open(url, \"_blank\");\n  }\n\n};\n\n__decorate([ViewChild('file')], CreateTicketComponent.prototype, \"file\", void 0);\n\nCreateTicketComponent = __decorate([Component({\n  selector: 'app-create-ticket',\n  templateUrl: './create-ticket.component.html',\n  styleUrls: ['./create-ticket.component.scss']\n}), __param(6, Inject(MAT_DIALOG_DATA))], CreateTicketComponent);\nexport { CreateTicketComponent };","map":{"version":3,"sources":["/home/meghna/mogi/kube-mogi/cheeta/frontend/cheeta/src/app/pages/create-ticket/create-ticket.component.ts"],"names":["__decorate","__param","Component","Inject","ViewChild","MAT_DIALOG_DATA","CreateValidation","CreateTicketComponent","constructor","dialogRef","cheetaTicketService","cheetaUserService","fileUploader","dialog","notification","data","createTicket","title","description","priority","files","tags","members","comments","type","expectedTime","UT","documentation","titleValidation","descriptionValidation","priorityValidation","membersArr","addOn","advanceOn","labelPosition","edit","btnString","isClicked","isLoading","min","Date","ngOnInit","res","getUsersList","length","Object","assign","ticketInfo","join","onCreate","ticket","replace","split","addTicket","close","updateTicket","_id","openDialog","openWarningDialog","addMember","ele","element","target","flag","forEach","e","userId","value","push","email","profilePic","remove","member","index","indexOf","splice","removeFiles","onValidation","errorMessage","addComment","comment","commentObj","user","localStorage","getItem","msg","dateTime","toISOString","selectedFile","FILE","fileUrl","uploadFile","file","nativeElement","addTags","event","trim","removeTags","goToLink","url","window","open","prototype","selector","templateUrl","styleUrls"],"mappings":"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","sourcesContent":["import { __decorate, __param } from \"tslib\";\nimport { Component, Inject, ViewChild } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { CreateValidation } from '../validations/validation-instance';\nlet CreateTicketComponent = class CreateTicketComponent {\n    constructor(dialogRef, cheetaTicketService, cheetaUserService, fileUploader, dialog, notification, data) {\n        this.dialogRef = dialogRef;\n        this.cheetaTicketService = cheetaTicketService;\n        this.cheetaUserService = cheetaUserService;\n        this.fileUploader = fileUploader;\n        this.dialog = dialog;\n        this.notification = notification;\n        this.data = data;\n        //ngModel names used for form\n        this.createTicket = {\n            title: '',\n            description: '',\n            priority: '',\n            files: [],\n            tags: [],\n            members: [],\n            comments: [],\n            type: '',\n            expectedTime: '',\n            UT: 'false',\n            documentation: 'false',\n        };\n        //for validation\n        this.titleValidation = new CreateValidation();\n        this.descriptionValidation = new CreateValidation();\n        this.priorityValidation = new CreateValidation();\n        this.membersArr = [];\n        this.addOn = false;\n        this.advanceOn = false;\n        this.labelPosition = \"before\";\n        this.edit = false;\n        this.btnString = \"Create\";\n        this.isClicked = false;\n        this.isLoading = false;\n        this.min = new Date();\n    }\n    async ngOnInit() {\n        this.isLoading = true;\n        let res = await this.cheetaUserService.getUsersList();\n        if (res && res.length)\n            this.membersArr = res;\n        this.isLoading = false;\n        if (this.data.edit) {\n            this.isLoading = true;\n            this.createTicket = Object.assign({}, this.data.ticketInfo);\n            if (this.data.ticketInfo.tags)\n                this.createTicket.tags = this.data.ticketInfo.tags.join(', ');\n            if (this.data.ticketInfo.UT)\n                this.createTicket.UT = 'true';\n            else\n                this.createTicket.UT = 'false';\n            if (this.data.ticketInfo.documentation)\n                this.createTicket.documentation = 'true';\n            else\n                this.createTicket.documentation = 'false';\n            this.btnString = 'Edit';\n            this.isLoading = false;\n        }\n    }\n    async onCreate() {\n        const ticket = {\n            title: this.createTicket.title,\n            description: this.createTicket.description,\n            priority: this.createTicket.priority,\n            type: this.createTicket.type\n        };\n        // if(this.createTicket.type) ticket['type'] = this.createTicket.type;\n        if (this.createTicket.UT == 'true')\n            ticket['UT'] = true;\n        else\n            ticket['UT'] = false;\n        if (this.createTicket.documentation == 'true')\n            ticket['documentation'] = true;\n        else\n            ticket['documentation'] = false;\n        if (this.createTicket.expectedTime)\n            ticket['expectedTime'] = this.createTicket.expectedTime;\n        if (this.createTicket.members) {\n            ticket['members'] = [...this.createTicket.members];\n        }\n        if (this.createTicket.comments)\n            ticket['comments'] = [...this.createTicket.comments];\n        if (this.createTicket.files)\n            ticket['files'] = [...this.createTicket.files];\n        if (this.createTicket.tags)\n            ticket['tags'] = this.createTicket.tags.replace(/\\s+/g, '').split(',');\n        if (ticket.title && ticket.description && ticket.priority && ticket.type) {\n            let res;\n            this.isClicked = true;\n            if (!this.data.edit) {\n                res = await this.cheetaTicketService.addTicket(ticket);\n                this.dialogRef.close();\n            }\n            else {\n                res = await this.cheetaTicketService.updateTicket(this.data.ticketInfo._id, ticket);\n                this.dialogRef.close();\n            }\n            // Add a toaster for Success msg and failure msgs accordingly\n            // in place of alerts!!!!!!!!\n            if (res) {\n                this.notification.openDialog(this.btnString + ' Successfully');\n                this.dialogRef.close();\n            }\n        }\n        else {\n            this.notification.openWarningDialog('Invalid Details!');\n            return;\n        }\n    }\n    addMember(ele) {\n        let element = ele.target;\n        let flag = 0;\n        this.createTicket.members.forEach((e) => {\n            if (e.userId == element.value)\n                flag++;\n        });\n        if (flag)\n            return;\n        this.membersArr.forEach(e => {\n            if (e._id == element.value)\n                this.createTicket.members.push({\n                    email: e.email,\n                    userId: e._id,\n                    type: e.type,\n                    profilePic: e.profilePic,\n                });\n        });\n    }\n    remove(member) {\n        const index = this.createTicket.members.indexOf(member);\n        if (index >= 0) {\n            this.createTicket.members.splice(index, 1);\n        }\n    }\n    removeFiles(files) {\n        const index = this.createTicket.files.indexOf(files);\n        if (index >= 0) {\n            this.createTicket.files.splice(index, 1);\n        }\n        // this.file.nativeElement.value = \"\";\n    }\n    onValidation() {\n        this.titleValidation.errorMessage = \"This field is required\";\n        this.descriptionValidation.errorMessage = \"This field is required\";\n        this.priorityValidation.errorMessage = \"this field is required\";\n    }\n    addComment(comment) {\n        let commentObj = {\n            user: localStorage.getItem('email'),\n            msg: comment.value,\n            dateTime: new Date().toISOString()\n        };\n        this.createTicket.comments.push(commentObj);\n    }\n    async selectedFile(e) {\n        let ele = e.target;\n        const FILE = ele.files[0];\n        const fileUrl = await this.fileUploader.uploadFile('cheetaFiles', FILE);\n        this.createTicket.files.push(fileUrl);\n        this.file.nativeElement.value = \"\";\n    }\n    addTags(event) {\n        const value = (event.value || '').trim();\n        this.createTicket.tags.push(this.tags);\n    }\n    removeTags(event) {\n        const index = this.createTicket.tags.indexOf(event);\n        if (index >= 0) {\n            this.createTicket.tags.splice(index, 1);\n        }\n    }\n    goToLink(url) {\n        window.open(url, \"_blank\");\n    }\n};\n__decorate([\n    ViewChild('file')\n], CreateTicketComponent.prototype, \"file\", void 0);\nCreateTicketComponent = __decorate([\n    Component({\n        selector: 'app-create-ticket',\n        templateUrl: './create-ticket.component.html',\n        styleUrls: ['./create-ticket.component.scss']\n    }),\n    __param(6, Inject(MAT_DIALOG_DATA))\n], CreateTicketComponent);\nexport { CreateTicketComponent };\n"]},"metadata":{},"sourceType":"module"}