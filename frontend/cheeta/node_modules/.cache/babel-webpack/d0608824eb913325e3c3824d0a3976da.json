{"ast":null,"code":"import _asyncToGenerator from \"/home/meghna/mogi/kube-mogi/cheeta/frontend/cheeta/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nconst OKR_BASE_URL = environment.okrUrl;\nexport class CheetaOkrService {\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n  }\n\n  createOkr(okr) {\n    console.log(\"in service\");\n    console.log(okr);\n    return new Promise((resolve, reject) => {\n      try {\n        this.http.post(OKR_BASE_URL, okr).subscribe( /*#__PURE__*/function () {\n          var _ref = _asyncToGenerator(function* (res) {\n            if (res.data && res.data.length) {\n              resolve(res.data);\n              console.log(res);\n            } else resolve([]);\n\n            console.log(res);\n          });\n\n          return function (_x) {\n            return _ref.apply(this, arguments);\n          };\n        }());\n      } catch (err) {\n        console.log(err);\n      }\n    });\n  }\n\n  getOkr() {\n    return new Promise((resolve, reject) => {\n      try {\n        this.http.get(OKR_BASE_URL + localStorage.getItem('userId')).subscribe(res => {\n          console.log(res);\n          resolve(res);\n        }, err => {\n          reject(err);\n        });\n      } catch (err) {\n        console.log(err);\n        reject(err);\n      }\n    });\n  } //function to delete tickets\n\n\n  deleteOkr(id) {\n    var _this = this;\n\n    console.log(id);\n    return new Promise((resolve, reject) => {\n      try {\n        this.http.delete(OKR_BASE_URL + id).subscribe( /*#__PURE__*/function () {\n          var _ref2 = _asyncToGenerator(function* (res) {\n            _this.ticketUpdated.next(1);\n\n            resolve(res);\n          });\n\n          return function (_x2) {\n            return _ref2.apply(this, arguments);\n          };\n        }());\n      } catch (err) {\n        reject(err);\n      }\n    });\n  }\n\n}\n\nCheetaOkrService.ɵfac = function CheetaOkrService_Factory(t) {\n  return new (t || CheetaOkrService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n};\n\nCheetaOkrService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CheetaOkrService,\n  factory: CheetaOkrService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["/home/meghna/mogi/kube-mogi/cheeta/frontend/cheeta/src/app/service/cheetaOkr.service.ts"],"names":["environment","i0","i1","i2","OKR_BASE_URL","okrUrl","CheetaOkrService","constructor","http","router","createOkr","okr","console","log","Promise","resolve","reject","post","subscribe","res","data","length","err","getOkr","get","localStorage","getItem","deleteOkr","id","delete","ticketUpdated","next","ɵfac","CheetaOkrService_Factory","t","ɵɵinject","HttpClient","Router","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":"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","sourcesContent":["import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nconst OKR_BASE_URL = environment.okrUrl;\nexport class CheetaOkrService {\n    constructor(http, router) {\n        this.http = http;\n        this.router = router;\n    }\n    createOkr(okr) {\n        console.log(\"in service\");\n        console.log(okr);\n        return new Promise((resolve, reject) => {\n            try {\n                this.http\n                    .post(OKR_BASE_URL, okr)\n                    .subscribe(async (res) => {\n                    if (res.data && res.data.length) {\n                        resolve(res.data);\n                        console.log(res);\n                    }\n                    else\n                        resolve([]);\n                    console.log(res);\n                });\n            }\n            catch (err) {\n                console.log(err);\n            }\n        });\n    }\n    getOkr() {\n        return new Promise((resolve, reject) => {\n            try {\n                this.http.get(OKR_BASE_URL + localStorage.getItem('userId'))\n                    .subscribe(res => {\n                    console.log(res);\n                    resolve(res);\n                }, (err) => {\n                    reject(err);\n                });\n            }\n            catch (err) {\n                console.log(err);\n                reject(err);\n            }\n        });\n    }\n    //function to delete tickets\n    deleteOkr(id) {\n        console.log(id);\n        return new Promise((resolve, reject) => {\n            try {\n                this.http\n                    .delete(OKR_BASE_URL + id)\n                    .subscribe(async (res) => {\n                    this.ticketUpdated.next(1);\n                    resolve(res);\n                });\n            }\n            catch (err) {\n                reject(err);\n            }\n        });\n    }\n}\nCheetaOkrService.ɵfac = function CheetaOkrService_Factory(t) { return new (t || CheetaOkrService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router)); };\nCheetaOkrService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: CheetaOkrService, factory: CheetaOkrService.ɵfac, providedIn: 'root' });\n"]},"metadata":{},"sourceType":"module"}