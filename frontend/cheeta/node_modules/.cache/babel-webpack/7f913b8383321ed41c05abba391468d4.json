{"ast":null,"code":"import _asyncToGenerator from \"/home/meghna/mogi/kube-mogi/cheeta/frontend/cheeta/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nconst TICKET_BASE_URL = environment.ticketUrl;\nexport class CheetaTicketService {\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n    this.smallTaskArr = [];\n    this.bigTaskArr = []; //function used in home page forshowing all ticketsummary table\n\n    this.ticketSummary = [];\n    this.cacheTime = 5000;\n  } //this ir to create a ticket from create option\n\n\n  addTicket(ticket) {\n    return new Promise((resolve, reject) => {\n      try {\n        this.http.post(TICKET_BASE_URL + 'createTicket', ticket).subscribe( /*#__PURE__*/function () {\n          var _ref = _asyncToGenerator(function* (res) {\n            resolve(res);\n          });\n\n          return function (_x) {\n            return _ref.apply(this, arguments);\n          };\n        }());\n      } catch (err) {}\n    });\n  } //this is for getting all tickets from backend to kan ban page\n\n\n  getTickets(filters) {\n    return new Promise((resolve, reject) => {\n      try {\n        this.http.post(TICKET_BASE_URL + \"getTickets\", filters).subscribe( /*#__PURE__*/function () {\n          var _ref2 = _asyncToGenerator(function* (res) {\n            if (res.data && res.data.length) resolve(res.data);else resolve([]);\n          });\n\n          return function (_x2) {\n            return _ref2.apply(this, arguments);\n          };\n        }());\n      } catch (err) {\n        console.log(err);\n      }\n    });\n  }\n\n  getTicketSummary() {\n    return new Promise((resolve, reject) => {\n      try {\n        if (this.ticketSummary.length > 0) resolve(this.ticketSummary);\n        this.http.get(TICKET_BASE_URL + 'getTicketSummary').subscribe(res => {\n          if (res && res['data']) {\n            // resolve(res);\n            let t;\n            t = res['data'];\n\n            for (let i = 0; i < t.length; i++) {\n              t[i].P0 = 0;\n              t[i].P1 = 0;\n              t[i].P2 = 0;\n              t[i].P3 = 0;\n              t[i].P4 = 0;\n\n              for (let j = 0; j < t[i].ticketsCount.length; j++) {\n                // if(t[i].ticketsCount[j].priority == \"P0\")\n                t[i][t[i].ticketsCount[j].priority] = t[i].ticketsCount[j].count;\n              }\n            }\n\n            this.ticketSummary = t;\n            setTimeout(() => {\n              this.ticketSummary = [];\n            }, this.cacheTime);\n            return resolve(this.ticketSummary);\n          }\n\n          reject(new Error(\"data is not there\"));\n        }, error => {\n          reject(error);\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    });\n  } //changes state of a ticket in kanban saction from backlog to development or deployment or done\n\n\n  updateTicketState(ticket, state) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      return new Promise((resolve, reject) => {\n        try {\n          _this.http.put(TICKET_BASE_URL + 'changeTicketState/' + ticket._id, {\n            state\n          }).subscribe(res => {\n            console.log(res);\n            if (res) resolve(res);\n          });\n        } catch (err) {\n          console.log(err);\n        }\n      });\n    })();\n  } //function to delete tickets\n\n\n  deleteTicket() {\n    return new Promise((resolve, reject) => {\n      try {\n        this.http.delete(TICKET_BASE_URL + localStorage.getItem('userId')).subscribe( /*#__PURE__*/function () {\n          var _ref3 = _asyncToGenerator(function* (res) {\n            resolve(res);\n          });\n\n          return function (_x3) {\n            return _ref3.apply(this, arguments);\n          };\n        }());\n      } catch (err) {\n        reject(err);\n      }\n    });\n  } //function to update ticket details\n\n\n  updateTicket(ticket) {\n    return new Promise((resolve, reject) => {\n      this.http.put(TICKET_BASE_URL + localStorage.getItem('userId'), ticket).subscribe( /*#__PURE__*/function () {\n        var _ref4 = _asyncToGenerator(function* (res) {\n          resolve(res);\n        });\n\n        return function (_x4) {\n          return _ref4.apply(this, arguments);\n        };\n      }(), err => {\n        reject(err);\n      });\n    });\n  }\n\n  getSmallTaskSummary() {\n    console.log(\"in service\");\n    return new Promise((resolve, reject) => {\n      try {\n        this.http.get(TICKET_BASE_URL + 'getTicketsByMember?userId=' + localStorage.getItem('userId')).subscribe(res => {\n          console.log(res);\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    });\n  }\n\n  getOkr() {\n    console.log(\"in service\");\n  }\n\n}\n\nCheetaTicketService.ɵfac = function CheetaTicketService_Factory(t) {\n  return new (t || CheetaTicketService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n};\n\nCheetaTicketService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CheetaTicketService,\n  factory: CheetaTicketService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["/home/meghna/mogi/kube-mogi/cheeta/frontend/cheeta/src/app/service/cheetaTicket.service.ts"],"names":["environment","i0","i1","i2","TICKET_BASE_URL","ticketUrl","CheetaTicketService","constructor","http","router","smallTaskArr","bigTaskArr","ticketSummary","cacheTime","addTicket","ticket","Promise","resolve","reject","post","subscribe","res","err","getTickets","filters","data","length","console","log","getTicketSummary","get","t","i","P0","P1","P2","P3","P4","j","ticketsCount","priority","count","setTimeout","Error","error","updateTicketState","state","put","_id","deleteTicket","delete","localStorage","getItem","updateTicket","getSmallTaskSummary","getOkr","ɵfac","CheetaTicketService_Factory","ɵɵinject","HttpClient","Router","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":"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","sourcesContent":["import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nconst TICKET_BASE_URL = environment.ticketUrl;\nexport class CheetaTicketService {\n    constructor(http, router) {\n        this.http = http;\n        this.router = router;\n        this.smallTaskArr = [];\n        this.bigTaskArr = [];\n        //function used in home page forshowing all ticketsummary table\n        this.ticketSummary = [];\n        this.cacheTime = 5000;\n    }\n    //this ir to create a ticket from create option\n    addTicket(ticket) {\n        return new Promise((resolve, reject) => {\n            try {\n                this.http\n                    .post(TICKET_BASE_URL + 'createTicket', ticket)\n                    .subscribe(async (res) => { resolve(res); });\n            }\n            catch (err) {\n            }\n        });\n    }\n    //this is for getting all tickets from backend to kan ban page\n    getTickets(filters) {\n        return new Promise((resolve, reject) => {\n            try {\n                this.http\n                    .post(TICKET_BASE_URL + \"getTickets\", filters)\n                    .subscribe(async (res) => {\n                    if (res.data && res.data.length)\n                        resolve(res.data);\n                    else\n                        resolve([]);\n                });\n            }\n            catch (err) {\n                console.log(err);\n            }\n        });\n    }\n    getTicketSummary() {\n        return new Promise((resolve, reject) => {\n            try {\n                if (this.ticketSummary.length > 0)\n                    resolve(this.ticketSummary);\n                this.http\n                    .get(TICKET_BASE_URL + 'getTicketSummary')\n                    .subscribe((res) => {\n                    if (res && res['data']) {\n                        // resolve(res);\n                        let t;\n                        t = res['data'];\n                        for (let i = 0; i < t.length; i++) {\n                            t[i].P0 = 0;\n                            t[i].P1 = 0;\n                            t[i].P2 = 0;\n                            t[i].P3 = 0;\n                            t[i].P4 = 0;\n                            for (let j = 0; j < t[i].ticketsCount.length; j++) {\n                                // if(t[i].ticketsCount[j].priority == \"P0\")\n                                t[i][t[i].ticketsCount[j].priority] = t[i].ticketsCount[j].count;\n                            }\n                        }\n                        this.ticketSummary = t;\n                        setTimeout(() => { this.ticketSummary = []; }, this.cacheTime);\n                        return resolve(this.ticketSummary);\n                    }\n                    reject(new Error(\"data is not there\"));\n                }, error => {\n                    reject(error);\n                });\n            }\n            catch (err) {\n                console.log(err);\n            }\n        });\n    }\n    //changes state of a ticket in kanban saction from backlog to development or deployment or done\n    async updateTicketState(ticket, state) {\n        return new Promise((resolve, reject) => {\n            try {\n                this.http\n                    .put(TICKET_BASE_URL + 'changeTicketState/' + ticket._id, { state })\n                    .subscribe((res) => {\n                    console.log(res);\n                    if (res)\n                        resolve(res);\n                });\n            }\n            catch (err) {\n                console.log(err);\n            }\n        });\n    }\n    //function to delete tickets\n    deleteTicket() {\n        return new Promise((resolve, reject) => {\n            try {\n                this.http\n                    .delete(TICKET_BASE_URL + localStorage.getItem('userId'))\n                    .subscribe(async (res) => {\n                    resolve(res);\n                });\n            }\n            catch (err) {\n                reject(err);\n            }\n        });\n    }\n    //function to update ticket details\n    updateTicket(ticket) {\n        return new Promise((resolve, reject) => {\n            this.http.\n                put(TICKET_BASE_URL + localStorage.getItem('userId'), ticket)\n                .subscribe(async (res) => {\n                resolve(res);\n            }, (err) => {\n                reject(err);\n            });\n        });\n    }\n    getSmallTaskSummary() {\n        console.log(\"in service\");\n        return new Promise((resolve, reject) => {\n            try {\n                this.http\n                    .get(TICKET_BASE_URL + 'getTicketsByMember?userId=' + localStorage.getItem('userId'))\n                    .subscribe((res) => {\n                    console.log(res);\n                });\n            }\n            catch (err) {\n                console.log(err);\n            }\n        });\n    }\n    getOkr() {\n        console.log(\"in service\");\n    }\n}\nCheetaTicketService.ɵfac = function CheetaTicketService_Factory(t) { return new (t || CheetaTicketService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router)); };\nCheetaTicketService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: CheetaTicketService, factory: CheetaTicketService.ɵfac, providedIn: 'root' });\n"]},"metadata":{},"sourceType":"module"}