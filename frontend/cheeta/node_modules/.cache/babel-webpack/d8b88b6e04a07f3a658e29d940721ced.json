{"ast":null,"code":"import _asyncToGenerator from \"/home/meghna/mogi/kube-mogi/cheeta/frontend/cheeta/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\nimport { WarningDialog } from '../notifications/warning.component';\nlet KanbanComponent = class KanbanComponent {\n  constructor(route, cheetaTicketService, cheetaUserService, cheetaTagsService, dialog) {\n    this.route = route;\n    this.cheetaTicketService = cheetaTicketService;\n    this.cheetaUserService = cheetaUserService;\n    this.cheetaTagsService = cheetaTagsService;\n    this.dialog = dialog;\n    this.backlog = [];\n    this.development = [];\n    this.testing = [];\n    this.done = [];\n    this.deployed = []; //filters option variables\n\n    this.projectName = \"\";\n    this.members = \"\";\n    this.priority = \"\";\n    this.state = \"\";\n    this.projectNameArr = []; //for members Filters\n\n    this.membersArr = {\n      developers: [],\n      testers: [],\n      others: []\n    };\n    this.toShow = {\n      'backlog': true,\n      'development': true,\n      'testing': true,\n      'done': true,\n      'deployed': true\n    };\n    this.isLoading = true;\n  }\n\n  ngOnInit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.isLoading = true;\n\n      _this.route.queryParamMap.subscribe( /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator(function* (paramMap) {\n          if (paramMap.has(\"search\")) {\n            // Use search instead of get\n            yield _this.searchTicket(paramMap.get('search'));\n          } else yield _this.loadPrevFilters();\n        });\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n\n      if (localStorage.getItem('lastFilter') && localStorage.getItem('lastFilter') !== \"{}\") {\n        let filterOption = \"{}\";\n        filterOption = localStorage.getItem('lastFilter');\n        yield _this.getTickets(JSON.parse(filterOption));\n      } else {\n        yield _this.getTickets({});\n      }\n\n      yield _this.membersCategory();\n      let resProjects = yield _this.cheetaTagsService.getProjectsList();\n      if (resProjects && resProjects.length) _this.projectNameArr = resProjects;\n      _this.takeSub = _this.cheetaTicketService.getTicketUpdateListener().subscribe( /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator(function* (data) {\n          yield _this.onApply();\n        });\n\n        return function (_x2) {\n          return _ref2.apply(this, arguments);\n        };\n      }());\n    })();\n  }\n\n  searchTicket(search) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      let result = yield _this2.cheetaTicketService.searchTicket(search);\n\n      if (result) {\n        _this2.loadTickets(result);\n\n        let arr = [];\n\n        if (localStorage.getItem('recentSearch')) {\n          let a = localStorage.getItem('recentSearch');\n          arr = [...JSON.parse(a)];\n          let check = arr.filter(i => {\n            if (i == search) return i;\n          });\n\n          if (!(check.length > 0)) {\n            arr.unshift(search);\n            if (arr.length > 5) arr.pop();\n            localStorage.setItem('recentSearch', JSON.stringify(arr));\n          }\n\n          return;\n        }\n\n        arr.unshift(search);\n        localStorage.setItem('recentSearch', JSON.stringify(arr));\n      }\n    })();\n  }\n\n  drop(event) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      if (event.previousContainer === event.container) {\n        moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n      } else {\n        const t = _this3.transferValid(event.previousContainer.id, event.container.id);\n\n        if (!t) {\n          _this3.openWarningDialog('Not valid Movement');\n\n          return;\n        }\n\n        transferArrayItem(event.previousContainer.data, event.container.data, event.previousIndex, event.currentIndex);\n\n        _this3.autoAddUser(event.container.data[event.currentIndex]);\n\n        _this3.updateTicketStatus(event.container.data[event.currentIndex], {\n          prev: event.previousContainer.id,\n          new: event.container.id,\n          prevData: event.previousContainer.data,\n          newData: event.container.data,\n          prevIndex: event.previousIndex,\n          newIndex: event.currentIndex\n        });\n      }\n    })();\n  }\n\n  transferValid(prevState, newState) {\n    const stateType = ['backlog', 'development', 'testing', 'done', 'deployed'];\n\n    if (stateType.indexOf(newState) > stateType.indexOf(prevState) && stateType.indexOf(newState) == stateType.indexOf(prevState) + 1) {\n      // console.log(ticket)\n      return true;\n    }\n\n    if (stateType.indexOf(newState) < stateType.indexOf(prevState) && newState == \"backlog\") return true;\n    return false;\n  } // it will work on two conditions\n  // * onInIt\n  // * using filters\n\n\n  getTickets(filters) {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      let result = yield _this4.cheetaTicketService.getTickets(filters);\n      console.log(result);\n\n      if (result) {\n        _this4.loadTickets(result);\n      }\n    })();\n  }\n\n  loadTickets(data) {\n    this.backlog = [];\n    this.development = [];\n    this.testing = [];\n    this.deployed = [];\n    this.done = [];\n    data.forEach(i => {\n      if (i.state == 'backlog') this.backlog.unshift(i);\n      if (i.state == 'development') this.development.unshift(i);\n      if (i.state == 'testing') this.testing.unshift(i);\n      if (i.state == 'deployed') this.deployed.unshift(i);\n      if (i.state == 'done') this.done.unshift(i);\n    });\n    this.isLoading = false;\n  }\n\n  loadPrevFilters() {\n    var _this5 = this;\n\n    return _asyncToGenerator(function* () {\n      if (localStorage.getItem('lastFilter') && localStorage.getItem('lastFilter') !== \"{}\") {\n        let filterOption;\n        filterOption = localStorage.getItem('lastFilter');\n        filterOption = JSON.parse(filterOption);\n        yield _this5.getTickets(filterOption); // add filters to filters drop down\n\n        if (filterOption['members']) _this5.members = filterOption['members'][0];\n        if (filterOption['priority']) _this5.priority = filterOption['priority'][0];\n        if (filterOption['project']) _this5.projectName = filterOption['project'][0];\n        if (filterOption['state']) _this5.projectName = filterOption['state'][0];\n      } else {\n        yield _this5.getTickets({});\n      }\n    })();\n  }\n\n  updateTicketStatus(ticket, states) {\n    var _this6 = this;\n\n    return _asyncToGenerator(function* () {\n      const changes = {\n        states: {\n          prev: states.prev,\n          new: states.new\n        },\n        user: yield _this6.getUserDets()\n      };\n\n      try {\n        let result = yield _this6.cheetaTicketService.updateTicketState(ticket, changes);\n        console.log(result);\n      } catch (err) {\n        transferArrayItem(states.newData, states.prevData, states.newIndex, states.prevIndex);\n\n        _this6.openWarningDialog('' + err);\n\n        return;\n      }\n    })();\n  }\n\n  onApply() {\n    var _this7 = this;\n\n    return _asyncToGenerator(function* () {\n      const filterOption = {};\n      if (_this7.members) filterOption['members'] = [_this7.members];\n      if (_this7.priority) filterOption['priority'] = [_this7.priority];\n      if (_this7.projectName) filterOption['project'] = [_this7.projectName];\n      if (_this7.state) filterOption['state'] = [_this7.state];\n      yield _this7.getTickets(filterOption);\n      localStorage.setItem('lastFilter', JSON.stringify(filterOption));\n    })();\n  }\n\n  openWarningDialog(warning) {\n    const dialogRef = this.dialog.open(WarningDialog, {\n      data: warning\n    });\n  }\n\n  autoAddUser(ticket) {\n    var _this8 = this;\n\n    return _asyncToGenerator(function* () {\n      let flag = ticket.members.filter(m => {\n        if (m.userId == localStorage.getItem('userId')) return m;\n      });\n\n      if (!flag.length) {\n        let members = [...ticket.members, yield _this8.getUserDets()];\n        yield _this8.cheetaTicketService.updateTicket(ticket._id, {\n          members\n        });\n      }\n    })();\n  }\n\n  membersCategory() {\n    var _this9 = this;\n\n    return _asyncToGenerator(function* () {\n      let resMembers = yield _this9.cheetaUserService.getUsersList();\n      resMembers.forEach(a => {\n        if (a.type == 'software-developer') _this9.membersArr.developers.push(a);else if (a.type == 'quality-analyst') _this9.membersArr.testers.push(a);else _this9.membersArr.others.push(a);\n      });\n    })();\n  }\n\n  getUserDets() {\n    var _this10 = this;\n\n    return _asyncToGenerator(function* () {\n      let userDets = yield _this10.cheetaUserService.getUserData();\n      if (userDets.data) return {\n        email: userDets.data.name,\n        type: userDets.data.type,\n        userId: userDets.data._id,\n        profilePic: userDets.data.profilePic ? userDets.data.profilePic : ''\n      };\n      return {};\n    })();\n  }\n\n  ngOnDestroy() {\n    this.takeSub.unsubscribe();\n  }\n\n};\nKanbanComponent = __decorate([Component({\n  selector: 'app-kanban',\n  templateUrl: './kanban.component.html',\n  styleUrls: ['./kanban.component.scss']\n})], KanbanComponent);\nexport { KanbanComponent };","map":{"version":3,"sources":["/home/meghna/mogi/kube-mogi/cheeta/frontend/cheeta/src/app/pages/kanban/kanban.component.ts"],"names":["__decorate","Component","moveItemInArray","transferArrayItem","WarningDialog","KanbanComponent","constructor","route","cheetaTicketService","cheetaUserService","cheetaTagsService","dialog","backlog","development","testing","done","deployed","projectName","members","priority","state","projectNameArr","membersArr","developers","testers","others","toShow","isLoading","ngOnInit","queryParamMap","subscribe","paramMap","has","searchTicket","get","loadPrevFilters","localStorage","getItem","filterOption","getTickets","JSON","parse","membersCategory","resProjects","getProjectsList","length","takeSub","getTicketUpdateListener","data","onApply","search","result","loadTickets","arr","a","check","filter","i","unshift","pop","setItem","stringify","drop","event","previousContainer","container","previousIndex","currentIndex","t","transferValid","id","openWarningDialog","autoAddUser","updateTicketStatus","prev","new","prevData","newData","prevIndex","newIndex","prevState","newState","stateType","indexOf","filters","console","log","forEach","ticket","states","changes","user","getUserDets","updateTicketState","err","warning","dialogRef","open","flag","m","userId","updateTicket","_id","resMembers","getUsersList","type","push","userDets","getUserData","email","name","profilePic","ngOnDestroy","unsubscribe","selector","templateUrl","styleUrls"],"mappings":";AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,SAASC,eAAT,EAA0BC,iBAA1B,QAAmD,wBAAnD;AACA,SAASC,aAAT,QAA8B,oCAA9B;AACA,IAAIC,eAAe,GAAG,MAAMA,eAAN,CAAsB;AACxCC,EAAAA,WAAW,CAACC,KAAD,EAAQC,mBAAR,EAA6BC,iBAA7B,EAAgDC,iBAAhD,EAAmEC,MAAnE,EAA2E;AAClF,SAAKJ,KAAL,GAAaA,KAAb;AACA,SAAKC,mBAAL,GAA2BA,mBAA3B;AACA,SAAKC,iBAAL,GAAyBA,iBAAzB;AACA,SAAKC,iBAAL,GAAyBA,iBAAzB;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKC,OAAL,GAAe,EAAf;AACA,SAAKC,WAAL,GAAmB,EAAnB;AACA,SAAKC,OAAL,GAAe,EAAf;AACA,SAAKC,IAAL,GAAY,EAAZ;AACA,SAAKC,QAAL,GAAgB,EAAhB,CAVkF,CAWlF;;AACA,SAAKC,WAAL,GAAmB,EAAnB;AACA,SAAKC,OAAL,GAAe,EAAf;AACA,SAAKC,QAAL,GAAgB,EAAhB;AACA,SAAKC,KAAL,GAAa,EAAb;AACA,SAAKC,cAAL,GAAsB,EAAtB,CAhBkF,CAiBlF;;AACA,SAAKC,UAAL,GAAkB;AACdC,MAAAA,UAAU,EAAE,EADE;AAEdC,MAAAA,OAAO,EAAE,EAFK;AAGdC,MAAAA,MAAM,EAAE;AAHM,KAAlB;AAKA,SAAKC,MAAL,GAAc;AACV,iBAAW,IADD;AAEV,qBAAe,IAFL;AAGV,iBAAW,IAHD;AAIV,cAAQ,IAJE;AAKV,kBAAY;AALF,KAAd;AAOA,SAAKC,SAAL,GAAiB,IAAjB;AACH;;AACKC,EAAAA,QAAQ,GAAG;AAAA;;AAAA;AACb,MAAA,KAAI,CAACD,SAAL,GAAiB,IAAjB;;AACA,MAAA,KAAI,CAACpB,KAAL,CAAWsB,aAAX,CAAyBC,SAAzB;AAAA,qCAAmC,WAAOC,QAAP,EAAoB;AACnD,cAAIA,QAAQ,CAACC,GAAT,CAAa,QAAb,CAAJ,EAA4B;AACxB;AACA,kBAAM,KAAI,CAACC,YAAL,CAAkBF,QAAQ,CAACG,GAAT,CAAa,QAAb,CAAlB,CAAN;AACH,WAHD,MAKI,MAAM,KAAI,CAACC,eAAL,EAAN;AACP,SAPD;;AAAA;AAAA;AAAA;AAAA;;AAQA,UAAIC,YAAY,CAACC,OAAb,CAAqB,YAArB,KACAD,YAAY,CAACC,OAAb,CAAqB,YAArB,MAAuC,IAD3C,EACiD;AAC7C,YAAIC,YAAY,GAAG,IAAnB;AACAA,QAAAA,YAAY,GAAGF,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAf;AACA,cAAM,KAAI,CAACE,UAAL,CAAgBC,IAAI,CAACC,KAAL,CAAWH,YAAX,CAAhB,CAAN;AACH,OALD,MAMK;AACD,cAAM,KAAI,CAACC,UAAL,CAAgB,EAAhB,CAAN;AACH;;AACD,YAAM,KAAI,CAACG,eAAL,EAAN;AACA,UAAIC,WAAW,SAAS,KAAI,CAACjC,iBAAL,CAAuBkC,eAAvB,EAAxB;AACA,UAAID,WAAW,IAAIA,WAAW,CAACE,MAA/B,EACI,KAAI,CAACxB,cAAL,GAAsBsB,WAAtB;AACJ,MAAA,KAAI,CAACG,OAAL,GAAe,KAAI,CAACtC,mBAAL,CAAyBuC,uBAAzB,GACVjB,SADU;AAAA,sCACA,WAAOkB,IAAP,EAAgB;AAC3B,gBAAM,KAAI,CAACC,OAAL,EAAN;AACH,SAHc;;AAAA;AAAA;AAAA;AAAA,UAAf;AAvBa;AA2BhB;;AACKhB,EAAAA,YAAY,CAACiB,MAAD,EAAS;AAAA;;AAAA;AACvB,UAAIC,MAAM,SAAS,MAAI,CAAC3C,mBAAL,CAAyByB,YAAzB,CAAsCiB,MAAtC,CAAnB;;AACA,UAAIC,MAAJ,EAAY;AACR,QAAA,MAAI,CAACC,WAAL,CAAiBD,MAAjB;;AACA,YAAIE,GAAG,GAAG,EAAV;;AACA,YAAIjB,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAJ,EAA0C;AACtC,cAAIiB,CAAC,GAAGlB,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAR;AACAgB,UAAAA,GAAG,GAAG,CAAC,GAAGb,IAAI,CAACC,KAAL,CAAWa,CAAX,CAAJ,CAAN;AACA,cAAIC,KAAK,GAAGF,GAAG,CAACG,MAAJ,CAAWC,CAAC,IAAI;AAAE,gBAAIA,CAAC,IAAIP,MAAT,EAC1B,OAAOO,CAAP;AAAW,WADH,CAAZ;;AAEA,cAAI,EAAEF,KAAK,CAACV,MAAN,GAAe,CAAjB,CAAJ,EAAyB;AACrBQ,YAAAA,GAAG,CAACK,OAAJ,CAAYR,MAAZ;AACA,gBAAIG,GAAG,CAACR,MAAJ,GAAa,CAAjB,EACIQ,GAAG,CAACM,GAAJ;AACJvB,YAAAA,YAAY,CAACwB,OAAb,CAAqB,cAArB,EAAqCpB,IAAI,CAACqB,SAAL,CAAeR,GAAf,CAArC;AACH;;AACD;AACH;;AACDA,QAAAA,GAAG,CAACK,OAAJ,CAAYR,MAAZ;AACAd,QAAAA,YAAY,CAACwB,OAAb,CAAqB,cAArB,EAAqCpB,IAAI,CAACqB,SAAL,CAAeR,GAAf,CAArC;AACH;AApBsB;AAqB1B;;AACKS,EAAAA,IAAI,CAACC,KAAD,EAAQ;AAAA;;AAAA;AACd,UAAIA,KAAK,CAACC,iBAAN,KAA4BD,KAAK,CAACE,SAAtC,EAAiD;AAC7C/D,QAAAA,eAAe,CAAC6D,KAAK,CAACE,SAAN,CAAgBjB,IAAjB,EAAuBe,KAAK,CAACG,aAA7B,EAA4CH,KAAK,CAACI,YAAlD,CAAf;AACH,OAFD,MAGK;AACD,cAAMC,CAAC,GAAG,MAAI,CAACC,aAAL,CAAmBN,KAAK,CAACC,iBAAN,CAAwBM,EAA3C,EAA+CP,KAAK,CAACE,SAAN,CAAgBK,EAA/D,CAAV;;AACA,YAAI,CAACF,CAAL,EAAQ;AACJ,UAAA,MAAI,CAACG,iBAAL,CAAuB,oBAAvB;;AACA;AACH;;AACDpE,QAAAA,iBAAiB,CAAC4D,KAAK,CAACC,iBAAN,CAAwBhB,IAAzB,EAA+Be,KAAK,CAACE,SAAN,CAAgBjB,IAA/C,EAAqDe,KAAK,CAACG,aAA3D,EAA0EH,KAAK,CAACI,YAAhF,CAAjB;;AACA,QAAA,MAAI,CAACK,WAAL,CAAiBT,KAAK,CAACE,SAAN,CAAgBjB,IAAhB,CAAqBe,KAAK,CAACI,YAA3B,CAAjB;;AACA,QAAA,MAAI,CAACM,kBAAL,CAAwBV,KAAK,CAACE,SAAN,CAAgBjB,IAAhB,CAAqBe,KAAK,CAACI,YAA3B,CAAxB,EAAkE;AAC9DO,UAAAA,IAAI,EAAEX,KAAK,CAACC,iBAAN,CAAwBM,EADgC;AAE9DK,UAAAA,GAAG,EAAEZ,KAAK,CAACE,SAAN,CAAgBK,EAFyC;AAG9DM,UAAAA,QAAQ,EAAEb,KAAK,CAACC,iBAAN,CAAwBhB,IAH4B;AAI9D6B,UAAAA,OAAO,EAAEd,KAAK,CAACE,SAAN,CAAgBjB,IAJqC;AAK9D8B,UAAAA,SAAS,EAAEf,KAAK,CAACG,aAL6C;AAM9Da,UAAAA,QAAQ,EAAEhB,KAAK,CAACI;AAN8C,SAAlE;AAQH;AApBa;AAqBjB;;AACDE,EAAAA,aAAa,CAACW,SAAD,EAAYC,QAAZ,EAAsB;AAC/B,UAAMC,SAAS,GAAG,CAAC,SAAD,EAAY,aAAZ,EAA2B,SAA3B,EAAsC,MAAtC,EAA8C,UAA9C,CAAlB;;AACA,QAAIA,SAAS,CAACC,OAAV,CAAkBF,QAAlB,IAA8BC,SAAS,CAACC,OAAV,CAAkBH,SAAlB,CAA9B,IACGE,SAAS,CAACC,OAAV,CAAkBF,QAAlB,KAA+BC,SAAS,CAACC,OAAV,CAAkBH,SAAlB,IAA+B,CADrE,EACwE;AACpE;AACA,aAAO,IAAP;AACH;;AACD,QAAIE,SAAS,CAACC,OAAV,CAAkBF,QAAlB,IAA8BC,SAAS,CAACC,OAAV,CAAkBH,SAAlB,CAA9B,IACGC,QAAQ,IAAI,SADnB,EAEI,OAAO,IAAP;AACJ,WAAO,KAAP;AACH,GApHuC,CAqHxC;AACA;AACA;;;AACM1C,EAAAA,UAAU,CAAC6C,OAAD,EAAU;AAAA;;AAAA;AACtB,UAAIjC,MAAM,SAAS,MAAI,CAAC3C,mBAAL,CAAyB+B,UAAzB,CAAoC6C,OAApC,CAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYnC,MAAZ;;AACA,UAAIA,MAAJ,EAAY;AACR,QAAA,MAAI,CAACC,WAAL,CAAiBD,MAAjB;AACH;AALqB;AAMzB;;AACDC,EAAAA,WAAW,CAACJ,IAAD,EAAO;AACd,SAAKpC,OAAL,GAAe,EAAf;AACA,SAAKC,WAAL,GAAmB,EAAnB;AACA,SAAKC,OAAL,GAAe,EAAf;AACA,SAAKE,QAAL,GAAgB,EAAhB;AACA,SAAKD,IAAL,GAAY,EAAZ;AACAiC,IAAAA,IAAI,CAACuC,OAAL,CAAc9B,CAAD,IAAO;AAChB,UAAIA,CAAC,CAACrC,KAAF,IAAW,SAAf,EACI,KAAKR,OAAL,CAAa8C,OAAb,CAAqBD,CAArB;AACJ,UAAIA,CAAC,CAACrC,KAAF,IAAW,aAAf,EACI,KAAKP,WAAL,CAAiB6C,OAAjB,CAAyBD,CAAzB;AACJ,UAAIA,CAAC,CAACrC,KAAF,IAAW,SAAf,EACI,KAAKN,OAAL,CAAa4C,OAAb,CAAqBD,CAArB;AACJ,UAAIA,CAAC,CAACrC,KAAF,IAAW,UAAf,EACI,KAAKJ,QAAL,CAAc0C,OAAd,CAAsBD,CAAtB;AACJ,UAAIA,CAAC,CAACrC,KAAF,IAAW,MAAf,EACI,KAAKL,IAAL,CAAU2C,OAAV,CAAkBD,CAAlB;AACP,KAXD;AAYA,SAAK9B,SAAL,GAAiB,KAAjB;AACH;;AACKQ,EAAAA,eAAe,GAAG;AAAA;;AAAA;AACpB,UAAIC,YAAY,CAACC,OAAb,CAAqB,YAArB,KACAD,YAAY,CAACC,OAAb,CAAqB,YAArB,MAAuC,IAD3C,EACiD;AAC7C,YAAIC,YAAJ;AACAA,QAAAA,YAAY,GAAGF,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAf;AACAC,QAAAA,YAAY,GAAGE,IAAI,CAACC,KAAL,CAAWH,YAAX,CAAf;AACA,cAAM,MAAI,CAACC,UAAL,CAAgBD,YAAhB,CAAN,CAJ6C,CAK7C;;AACA,YAAIA,YAAY,CAAC,SAAD,CAAhB,EACI,MAAI,CAACpB,OAAL,GAAeoB,YAAY,CAAC,SAAD,CAAZ,CAAwB,CAAxB,CAAf;AACJ,YAAIA,YAAY,CAAC,UAAD,CAAhB,EACI,MAAI,CAACnB,QAAL,GAAgBmB,YAAY,CAAC,UAAD,CAAZ,CAAyB,CAAzB,CAAhB;AACJ,YAAIA,YAAY,CAAC,SAAD,CAAhB,EACI,MAAI,CAACrB,WAAL,GAAmBqB,YAAY,CAAC,SAAD,CAAZ,CAAwB,CAAxB,CAAnB;AACJ,YAAIA,YAAY,CAAC,OAAD,CAAhB,EACI,MAAI,CAACrB,WAAL,GAAmBqB,YAAY,CAAC,OAAD,CAAZ,CAAsB,CAAtB,CAAnB;AACP,OAfD,MAgBK;AACD,cAAM,MAAI,CAACC,UAAL,CAAgB,EAAhB,CAAN;AACH;AAnBmB;AAoBvB;;AACKkC,EAAAA,kBAAkB,CAACe,MAAD,EAASC,MAAT,EAAiB;AAAA;;AAAA;AACrC,YAAMC,OAAO,GAAG;AACZD,QAAAA,MAAM,EAAE;AACJf,UAAAA,IAAI,EAAEe,MAAM,CAACf,IADT;AAEJC,UAAAA,GAAG,EAAEc,MAAM,CAACd;AAFR,SADI;AAKZgB,QAAAA,IAAI,QAAQ,MAAI,CAACC,WAAL;AALA,OAAhB;;AAOA,UAAI;AACA,YAAIzC,MAAM,SAAS,MAAI,CAAC3C,mBAAL,CAAyBqF,iBAAzB,CAA2CL,MAA3C,EAAmDE,OAAnD,CAAnB;AACAL,QAAAA,OAAO,CAACC,GAAR,CAAYnC,MAAZ;AACH,OAHD,CAIA,OAAO2C,GAAP,EAAY;AACR3F,QAAAA,iBAAiB,CAACsF,MAAM,CAACZ,OAAR,EAAiBY,MAAM,CAACb,QAAxB,EAAkCa,MAAM,CAACV,QAAzC,EAAmDU,MAAM,CAACX,SAA1D,CAAjB;;AACA,QAAA,MAAI,CAACP,iBAAL,CAAuB,KAAKuB,GAA5B;;AACA;AACH;AAhBoC;AAiBxC;;AACK7C,EAAAA,OAAO,GAAG;AAAA;;AAAA;AACZ,YAAMX,YAAY,GAAG,EAArB;AACA,UAAI,MAAI,CAACpB,OAAT,EACIoB,YAAY,CAAC,SAAD,CAAZ,GAA0B,CAAC,MAAI,CAACpB,OAAN,CAA1B;AACJ,UAAI,MAAI,CAACC,QAAT,EACImB,YAAY,CAAC,UAAD,CAAZ,GAA2B,CAAC,MAAI,CAACnB,QAAN,CAA3B;AACJ,UAAI,MAAI,CAACF,WAAT,EACIqB,YAAY,CAAC,SAAD,CAAZ,GAA0B,CAAC,MAAI,CAACrB,WAAN,CAA1B;AACJ,UAAI,MAAI,CAACG,KAAT,EACIkB,YAAY,CAAC,OAAD,CAAZ,GAAwB,CAAC,MAAI,CAAClB,KAAN,CAAxB;AACJ,YAAM,MAAI,CAACmB,UAAL,CAAgBD,YAAhB,CAAN;AACAF,MAAAA,YAAY,CAACwB,OAAb,CAAqB,YAArB,EAAmCpB,IAAI,CAACqB,SAAL,CAAevB,YAAf,CAAnC;AAXY;AAYf;;AACDiC,EAAAA,iBAAiB,CAACwB,OAAD,EAAU;AACvB,UAAMC,SAAS,GAAG,KAAKrF,MAAL,CAAYsF,IAAZ,CAAiB7F,aAAjB,EAAgC;AAC9C4C,MAAAA,IAAI,EAAE+C;AADwC,KAAhC,CAAlB;AAGH;;AACKvB,EAAAA,WAAW,CAACgB,MAAD,EAAS;AAAA;;AAAA;AACtB,UAAIU,IAAI,GAAGV,MAAM,CAACtE,OAAP,CAAesC,MAAf,CAAuB2C,CAAD,IAAO;AACpC,YAAIA,CAAC,CAACC,MAAF,IAAYhE,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAhB,EACI,OAAO8D,CAAP;AACP,OAHU,CAAX;;AAIA,UAAI,CAACD,IAAI,CAACrD,MAAV,EAAkB;AACd,YAAI3B,OAAO,GAAG,CAAC,GAAGsE,MAAM,CAACtE,OAAX,QAA0B,MAAI,CAAC0E,WAAL,EAA1B,CAAd;AACA,cAAM,MAAI,CAACpF,mBAAL,CAAyB6F,YAAzB,CAAsCb,MAAM,CAACc,GAA7C,EAAkD;AAAEpF,UAAAA;AAAF,SAAlD,CAAN;AACH;AARqB;AASzB;;AACKwB,EAAAA,eAAe,GAAG;AAAA;;AAAA;AACpB,UAAI6D,UAAU,SAAS,MAAI,CAAC9F,iBAAL,CAAuB+F,YAAvB,EAAvB;AACAD,MAAAA,UAAU,CAAChB,OAAX,CAAoBjC,CAAD,IAAO;AACtB,YAAIA,CAAC,CAACmD,IAAF,IAAU,oBAAd,EACI,MAAI,CAACnF,UAAL,CAAgBC,UAAhB,CAA2BmF,IAA3B,CAAgCpD,CAAhC,EADJ,KAEK,IAAIA,CAAC,CAACmD,IAAF,IAAU,iBAAd,EACD,MAAI,CAACnF,UAAL,CAAgBE,OAAhB,CAAwBkF,IAAxB,CAA6BpD,CAA7B,EADC,KAGD,MAAI,CAAChC,UAAL,CAAgBG,MAAhB,CAAuBiF,IAAvB,CAA4BpD,CAA5B;AACP,OAPD;AAFoB;AAUvB;;AACKsC,EAAAA,WAAW,GAAG;AAAA;;AAAA;AAChB,UAAIe,QAAQ,SAAS,OAAI,CAAClG,iBAAL,CAAuBmG,WAAvB,EAArB;AACA,UAAID,QAAQ,CAAC3D,IAAb,EACI,OAAO;AACH6D,QAAAA,KAAK,EAAEF,QAAQ,CAAC3D,IAAT,CAAc8D,IADlB;AAEHL,QAAAA,IAAI,EAAEE,QAAQ,CAAC3D,IAAT,CAAcyD,IAFjB;AAGHL,QAAAA,MAAM,EAAEO,QAAQ,CAAC3D,IAAT,CAAcsD,GAHnB;AAIHS,QAAAA,UAAU,EAAEJ,QAAQ,CAAC3D,IAAT,CAAc+D,UAAd,GAA2BJ,QAAQ,CAAC3D,IAAT,CAAc+D,UAAzC,GAAsD;AAJ/D,OAAP;AAMJ,aAAO,EAAP;AATgB;AAUnB;;AACDC,EAAAA,WAAW,GAAG;AACV,SAAKlE,OAAL,CAAamE,WAAb;AACH;;AA9OuC,CAA5C;AAgPA5G,eAAe,GAAGL,UAAU,CAAC,CACzBC,SAAS,CAAC;AACNiH,EAAAA,QAAQ,EAAE,YADJ;AAENC,EAAAA,WAAW,EAAE,yBAFP;AAGNC,EAAAA,SAAS,EAAE,CAAC,yBAAD;AAHL,CAAD,CADgB,CAAD,EAMzB/G,eANyB,CAA5B;AAOA,SAASA,eAAT","sourcesContent":["import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\nimport { WarningDialog } from '../notifications/warning.component';\nlet KanbanComponent = class KanbanComponent {\n    constructor(route, cheetaTicketService, cheetaUserService, cheetaTagsService, dialog) {\n        this.route = route;\n        this.cheetaTicketService = cheetaTicketService;\n        this.cheetaUserService = cheetaUserService;\n        this.cheetaTagsService = cheetaTagsService;\n        this.dialog = dialog;\n        this.backlog = [];\n        this.development = [];\n        this.testing = [];\n        this.done = [];\n        this.deployed = [];\n        //filters option variables\n        this.projectName = \"\";\n        this.members = \"\";\n        this.priority = \"\";\n        this.state = \"\";\n        this.projectNameArr = [];\n        //for members Filters\n        this.membersArr = {\n            developers: [],\n            testers: [],\n            others: []\n        };\n        this.toShow = {\n            'backlog': true,\n            'development': true,\n            'testing': true,\n            'done': true,\n            'deployed': true,\n        };\n        this.isLoading = true;\n    }\n    async ngOnInit() {\n        this.isLoading = true;\n        this.route.queryParamMap.subscribe(async (paramMap) => {\n            if (paramMap.has(\"search\")) {\n                // Use search instead of get\n                await this.searchTicket(paramMap.get('search'));\n            }\n            else\n                await this.loadPrevFilters();\n        });\n        if (localStorage.getItem('lastFilter') &&\n            localStorage.getItem('lastFilter') !== \"{}\") {\n            let filterOption = \"{}\";\n            filterOption = localStorage.getItem('lastFilter');\n            await this.getTickets(JSON.parse(filterOption));\n        }\n        else {\n            await this.getTickets({});\n        }\n        await this.membersCategory();\n        let resProjects = await this.cheetaTagsService.getProjectsList();\n        if (resProjects && resProjects.length)\n            this.projectNameArr = resProjects;\n        this.takeSub = this.cheetaTicketService.getTicketUpdateListener()\n            .subscribe(async (data) => {\n            await this.onApply();\n        });\n    }\n    async searchTicket(search) {\n        let result = await this.cheetaTicketService.searchTicket(search);\n        if (result) {\n            this.loadTickets(result);\n            let arr = [];\n            if (localStorage.getItem('recentSearch')) {\n                let a = localStorage.getItem('recentSearch');\n                arr = [...JSON.parse(a)];\n                let check = arr.filter(i => { if (i == search)\n                    return i; });\n                if (!(check.length > 0)) {\n                    arr.unshift(search);\n                    if (arr.length > 5)\n                        arr.pop();\n                    localStorage.setItem('recentSearch', JSON.stringify(arr));\n                }\n                return;\n            }\n            arr.unshift(search);\n            localStorage.setItem('recentSearch', JSON.stringify(arr));\n        }\n    }\n    async drop(event) {\n        if (event.previousContainer === event.container) {\n            moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n        }\n        else {\n            const t = this.transferValid(event.previousContainer.id, event.container.id);\n            if (!t) {\n                this.openWarningDialog('Not valid Movement');\n                return;\n            }\n            transferArrayItem(event.previousContainer.data, event.container.data, event.previousIndex, event.currentIndex);\n            this.autoAddUser(event.container.data[event.currentIndex]);\n            this.updateTicketStatus(event.container.data[event.currentIndex], {\n                prev: event.previousContainer.id,\n                new: event.container.id,\n                prevData: event.previousContainer.data,\n                newData: event.container.data,\n                prevIndex: event.previousIndex,\n                newIndex: event.currentIndex\n            });\n        }\n    }\n    transferValid(prevState, newState) {\n        const stateType = ['backlog', 'development', 'testing', 'done', 'deployed'];\n        if (stateType.indexOf(newState) > stateType.indexOf(prevState)\n            && stateType.indexOf(newState) == stateType.indexOf(prevState) + 1) {\n            // console.log(ticket)\n            return true;\n        }\n        if (stateType.indexOf(newState) < stateType.indexOf(prevState)\n            && newState == \"backlog\")\n            return true;\n        return false;\n    }\n    // it will work on two conditions\n    // * onInIt\n    // * using filters\n    async getTickets(filters) {\n        let result = await this.cheetaTicketService.getTickets(filters);\n        console.log(result);\n        if (result) {\n            this.loadTickets(result);\n        }\n    }\n    loadTickets(data) {\n        this.backlog = [];\n        this.development = [];\n        this.testing = [];\n        this.deployed = [];\n        this.done = [];\n        data.forEach((i) => {\n            if (i.state == 'backlog')\n                this.backlog.unshift(i);\n            if (i.state == 'development')\n                this.development.unshift(i);\n            if (i.state == 'testing')\n                this.testing.unshift(i);\n            if (i.state == 'deployed')\n                this.deployed.unshift(i);\n            if (i.state == 'done')\n                this.done.unshift(i);\n        });\n        this.isLoading = false;\n    }\n    async loadPrevFilters() {\n        if (localStorage.getItem('lastFilter') &&\n            localStorage.getItem('lastFilter') !== \"{}\") {\n            let filterOption;\n            filterOption = localStorage.getItem('lastFilter');\n            filterOption = JSON.parse(filterOption);\n            await this.getTickets(filterOption);\n            // add filters to filters drop down\n            if (filterOption['members'])\n                this.members = filterOption['members'][0];\n            if (filterOption['priority'])\n                this.priority = filterOption['priority'][0];\n            if (filterOption['project'])\n                this.projectName = filterOption['project'][0];\n            if (filterOption['state'])\n                this.projectName = filterOption['state'][0];\n        }\n        else {\n            await this.getTickets({});\n        }\n    }\n    async updateTicketStatus(ticket, states) {\n        const changes = {\n            states: {\n                prev: states.prev,\n                new: states.new\n            },\n            user: await this.getUserDets()\n        };\n        try {\n            let result = await this.cheetaTicketService.updateTicketState(ticket, changes);\n            console.log(result);\n        }\n        catch (err) {\n            transferArrayItem(states.newData, states.prevData, states.newIndex, states.prevIndex);\n            this.openWarningDialog('' + err);\n            return;\n        }\n    }\n    async onApply() {\n        const filterOption = {};\n        if (this.members)\n            filterOption['members'] = [this.members];\n        if (this.priority)\n            filterOption['priority'] = [this.priority];\n        if (this.projectName)\n            filterOption['project'] = [this.projectName];\n        if (this.state)\n            filterOption['state'] = [this.state];\n        await this.getTickets(filterOption);\n        localStorage.setItem('lastFilter', JSON.stringify(filterOption));\n    }\n    openWarningDialog(warning) {\n        const dialogRef = this.dialog.open(WarningDialog, {\n            data: warning,\n        });\n    }\n    async autoAddUser(ticket) {\n        let flag = ticket.members.filter((m) => {\n            if (m.userId == localStorage.getItem('userId'))\n                return m;\n        });\n        if (!flag.length) {\n            let members = [...ticket.members, await this.getUserDets()];\n            await this.cheetaTicketService.updateTicket(ticket._id, { members });\n        }\n    }\n    async membersCategory() {\n        let resMembers = await this.cheetaUserService.getUsersList();\n        resMembers.forEach((a) => {\n            if (a.type == 'software-developer')\n                this.membersArr.developers.push(a);\n            else if (a.type == 'quality-analyst')\n                this.membersArr.testers.push(a);\n            else\n                this.membersArr.others.push(a);\n        });\n    }\n    async getUserDets() {\n        let userDets = await this.cheetaUserService.getUserData();\n        if (userDets.data)\n            return {\n                email: userDets.data.name,\n                type: userDets.data.type,\n                userId: userDets.data._id,\n                profilePic: userDets.data.profilePic ? userDets.data.profilePic : ''\n            };\n        return {};\n    }\n    ngOnDestroy() {\n        this.takeSub.unsubscribe();\n    }\n};\nKanbanComponent = __decorate([\n    Component({\n        selector: 'app-kanban',\n        templateUrl: './kanban.component.html',\n        styleUrls: ['./kanban.component.scss']\n    })\n], KanbanComponent);\nexport { KanbanComponent };\n"]},"metadata":{},"sourceType":"module"}